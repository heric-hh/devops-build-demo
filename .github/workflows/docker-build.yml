# Nombre del workflow, visible en la pestaña "Actions" de GitHub
name: Docker Build Express App

# Define el disparador: se ejecuta en cada 'push' a la rama 'main'
on:
  push:
    branches:
      - main
  # Permite ejecutar el workflow manualmente desde la interfaz
  workflow_dispatch:

# Define los jobs (tareas) que se ejecutarán
jobs:
  build_and_push:
    # El entorno donde se ejecutará la tarea (una máquina virtual de Ubuntu)
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Obtener el código fuente
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 2: Configurar Docker Buildx (Herramienta de construcción eficiente)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Paso 3: Iniciar sesión en Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Usa el secret creado
          password: ${{ secrets.DOCKER_PASSWORD }} # Usa el secret creado

      # Paso 4: Construir y subir (push) la imagen de Docker
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: . # Usa el directorio actual como contexto de construcción
          file: ./Dockerfile # Ruta al Dockerfile
          push: true # Sube la imagen al registro (Docker Hub)
          tags: | # Define las etiquetas (tags)
            ${{ secrets.DOCKER_USERNAME }}/express-devops-demo:latest
            ${{ secrets.DOCKER_USERNAME }}/express-devops-demo:${{ github.sha }}
          # La etiqueta con 'github.sha' proporciona una versión única e inmutable
